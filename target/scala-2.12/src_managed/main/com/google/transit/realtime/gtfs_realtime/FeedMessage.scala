// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.google.transit.realtime.gtfs_realtime

/** The contents of a feed message.
  * A feed is a continuous stream of feed messages. Each message in the stream is
  * obtained as a response to an appropriate HTTP GET request.
  * A realtime feed is always defined with relation to an existing GTFS feed.
  * All the entity ids are resolved with respect to the GTFS feed.
  * Note that "required" and "optional" as stated in this file refer to Protocol
  * Buffer cardinality, not semantic cardinality.  See reference.md at
  * https://github.com/google/transit/tree/master/gtfs-realtime for field
  * semantic cardinality.
  *
  * @param header
  *   Metadata about this feed and feed message.
  * @param entity
  *   Contents of the feed.
  */
@SerialVersionUID(0L)
final case class FeedMessage(
    header: com.google.transit.realtime.gtfs_realtime.FeedHeader,
    entity: _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.FeedEntity] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet()
    ) extends scalapb.GeneratedMessage with scalapb.Message[FeedMessage] with scalapb.lenses.Updatable[FeedMessage] with _root_.scalapb.ExtendableMessage[FeedMessage] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = header
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      entity.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      
      {
        val __v = header
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      entity.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.transit.realtime.gtfs_realtime.FeedMessage = {
      var __header = this.header
      val __entity = (_root_.scala.collection.immutable.Vector.newBuilder[com.google.transit.realtime.gtfs_realtime.FeedEntity] ++= this.entity)
      val _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder(this.unknownFields)
      var __requiredFields0: _root_.scala.Long = 0x1L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __header = _root_.scalapb.LiteParser.readMessage(_input__, __header)
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __entity += _root_.scalapb.LiteParser.readMessage(_input__, com.google.transit.realtime.gtfs_realtime.FeedEntity.defaultInstance)
          case tag => _unknownFields__.parseField(tag, _input__)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.google.transit.realtime.gtfs_realtime.FeedMessage(
          header = __header,
          entity = __entity.result(),
          unknownFields = _unknownFields__.result()
      )
    }
    def withHeader(__v: com.google.transit.realtime.gtfs_realtime.FeedHeader): FeedMessage = copy(header = __v)
    def clearEntity = copy(entity = _root_.scala.Seq.empty)
    def addEntity(__vs: com.google.transit.realtime.gtfs_realtime.FeedEntity*): FeedMessage = addAllEntity(__vs)
    def addAllEntity(__vs: Iterable[com.google.transit.realtime.gtfs_realtime.FeedEntity]): FeedMessage = copy(entity = entity ++ __vs)
    def withEntity(__v: _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.FeedEntity]): FeedMessage = copy(entity = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => header
        case 2 => entity
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => header.toPMessage
        case 2 => _root_.scalapb.descriptors.PRepeated(entity.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.transit.realtime.gtfs_realtime.FeedMessage
}

object FeedMessage extends scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.FeedMessage] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.FeedMessage] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.transit.realtime.gtfs_realtime.FeedMessage = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.transit.realtime.gtfs_realtime.FeedMessage(
      __fieldsMap(__fields.get(0)).asInstanceOf[com.google.transit.realtime.gtfs_realtime.FeedHeader],
      __fieldsMap.getOrElse(__fields.get(1), Nil).asInstanceOf[_root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.FeedEntity]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.transit.realtime.gtfs_realtime.FeedMessage] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.transit.realtime.gtfs_realtime.FeedMessage(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[com.google.transit.realtime.gtfs_realtime.FeedHeader],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.FeedEntity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = GtfsRealtimeProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = GtfsRealtimeProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.google.transit.realtime.gtfs_realtime.FeedHeader
      case 2 => __out = com.google.transit.realtime.gtfs_realtime.FeedEntity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.transit.realtime.gtfs_realtime.FeedMessage(
    header = com.google.transit.realtime.gtfs_realtime.FeedHeader.defaultInstance
  )
  implicit class FeedMessageLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.FeedMessage]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.transit.realtime.gtfs_realtime.FeedMessage](_l) {
    def header: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.FeedHeader] = field(_.header)((c_, f_) => c_.copy(header = f_))
    def entity: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.FeedEntity]] = field(_.entity)((c_, f_) => c_.copy(entity = f_))
  }
  final val HEADER_FIELD_NUMBER = 1
  final val ENTITY_FIELD_NUMBER = 2
  def of(
    header: com.google.transit.realtime.gtfs_realtime.FeedHeader,
    entity: _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.FeedEntity],
    unknownFields: _root_.scalapb.UnknownFieldSet
  ): _root_.com.google.transit.realtime.gtfs_realtime.FeedMessage = _root_.com.google.transit.realtime.gtfs_realtime.FeedMessage(
    header,
    entity,
    unknownFields
  )
}
