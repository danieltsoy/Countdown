// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.google.transit.realtime.gtfs_realtime

/** An alert, indicating some sort of incident in the public transit network.
  *
  * @param activePeriod
  *   Time when the alert should be shown to the user. If missing, the
  *   alert will be shown as long as it appears in the feed.
  *   If multiple ranges are given, the alert will be shown during all of them.
  * @param informedEntity
  *   Entities whose users we should notify of this alert.
  * @param url
  *   The URL which provides additional information about the alert.
  * @param headerText
  *   Alert header. Contains a short summary of the alert text as plain-text.
  * @param descriptionText
  *   Full description for the alert as plain-text. The information in the
  *   description should add to the information of the header.
  */
@SerialVersionUID(0L)
final case class Alert(
    activePeriod: _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.TimeRange] = _root_.scala.Seq.empty,
    informedEntity: _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.EntitySelector] = _root_.scala.Seq.empty,
    cause: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert.Cause] = _root_.scala.None,
    effect: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert.Effect] = _root_.scala.None,
    url: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString] = _root_.scala.None,
    headerText: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString] = _root_.scala.None,
    descriptionText: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet()
    ) extends scalapb.GeneratedMessage with scalapb.Message[Alert] with scalapb.lenses.Updatable[Alert] with _root_.scalapb.ExtendableMessage[Alert] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      activePeriod.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      informedEntity.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (cause.isDefined) {
        val __value = cause.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value.value)
      };
      if (effect.isDefined) {
        val __value = effect.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(7, __value.value)
      };
      if (url.isDefined) {
        val __value = url.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (headerText.isDefined) {
        val __value = headerText.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (descriptionText.isDefined) {
        val __value = descriptionText.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      activePeriod.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      informedEntity.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      cause.foreach { __v =>
        val __m = __v
        _output__.writeEnum(6, __m.value)
      };
      effect.foreach { __v =>
        val __m = __v
        _output__.writeEnum(7, __m.value)
      };
      url.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      headerText.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      descriptionText.foreach { __v =>
        val __m = __v
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.transit.realtime.gtfs_realtime.Alert = {
      val __activePeriod = (_root_.scala.collection.immutable.Vector.newBuilder[com.google.transit.realtime.gtfs_realtime.TimeRange] ++= this.activePeriod)
      val __informedEntity = (_root_.scala.collection.immutable.Vector.newBuilder[com.google.transit.realtime.gtfs_realtime.EntitySelector] ++= this.informedEntity)
      var __cause = this.cause
      var __effect = this.effect
      var __url = this.url
      var __headerText = this.headerText
      var __descriptionText = this.descriptionText
      val _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder(this.unknownFields)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __activePeriod += _root_.scalapb.LiteParser.readMessage(_input__, com.google.transit.realtime.gtfs_realtime.TimeRange.defaultInstance)
          case 42 =>
            __informedEntity += _root_.scalapb.LiteParser.readMessage(_input__, com.google.transit.realtime.gtfs_realtime.EntitySelector.defaultInstance)
          case 48 =>
            __cause = Option(com.google.transit.realtime.gtfs_realtime.Alert.Cause.fromValue(_input__.readEnum()))
          case 56 =>
            __effect = Option(com.google.transit.realtime.gtfs_realtime.Alert.Effect.fromValue(_input__.readEnum()))
          case 66 =>
            __url = Option(_root_.scalapb.LiteParser.readMessage(_input__, __url.getOrElse(com.google.transit.realtime.gtfs_realtime.TranslatedString.defaultInstance)))
          case 82 =>
            __headerText = Option(_root_.scalapb.LiteParser.readMessage(_input__, __headerText.getOrElse(com.google.transit.realtime.gtfs_realtime.TranslatedString.defaultInstance)))
          case 90 =>
            __descriptionText = Option(_root_.scalapb.LiteParser.readMessage(_input__, __descriptionText.getOrElse(com.google.transit.realtime.gtfs_realtime.TranslatedString.defaultInstance)))
          case tag => _unknownFields__.parseField(tag, _input__)
        }
      }
      com.google.transit.realtime.gtfs_realtime.Alert(
          activePeriod = __activePeriod.result(),
          informedEntity = __informedEntity.result(),
          cause = __cause,
          effect = __effect,
          url = __url,
          headerText = __headerText,
          descriptionText = __descriptionText,
          unknownFields = _unknownFields__.result()
      )
    }
    def clearActivePeriod = copy(activePeriod = _root_.scala.Seq.empty)
    def addActivePeriod(__vs: com.google.transit.realtime.gtfs_realtime.TimeRange*): Alert = addAllActivePeriod(__vs)
    def addAllActivePeriod(__vs: Iterable[com.google.transit.realtime.gtfs_realtime.TimeRange]): Alert = copy(activePeriod = activePeriod ++ __vs)
    def withActivePeriod(__v: _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.TimeRange]): Alert = copy(activePeriod = __v)
    def clearInformedEntity = copy(informedEntity = _root_.scala.Seq.empty)
    def addInformedEntity(__vs: com.google.transit.realtime.gtfs_realtime.EntitySelector*): Alert = addAllInformedEntity(__vs)
    def addAllInformedEntity(__vs: Iterable[com.google.transit.realtime.gtfs_realtime.EntitySelector]): Alert = copy(informedEntity = informedEntity ++ __vs)
    def withInformedEntity(__v: _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.EntitySelector]): Alert = copy(informedEntity = __v)
    def getCause: com.google.transit.realtime.gtfs_realtime.Alert.Cause = cause.getOrElse(com.google.transit.realtime.gtfs_realtime.Alert.Cause.UNKNOWN_CAUSE)
    def clearCause: Alert = copy(cause = _root_.scala.None)
    def withCause(__v: com.google.transit.realtime.gtfs_realtime.Alert.Cause): Alert = copy(cause = Option(__v))
    def getEffect: com.google.transit.realtime.gtfs_realtime.Alert.Effect = effect.getOrElse(com.google.transit.realtime.gtfs_realtime.Alert.Effect.UNKNOWN_EFFECT)
    def clearEffect: Alert = copy(effect = _root_.scala.None)
    def withEffect(__v: com.google.transit.realtime.gtfs_realtime.Alert.Effect): Alert = copy(effect = Option(__v))
    def getUrl: com.google.transit.realtime.gtfs_realtime.TranslatedString = url.getOrElse(com.google.transit.realtime.gtfs_realtime.TranslatedString.defaultInstance)
    def clearUrl: Alert = copy(url = _root_.scala.None)
    def withUrl(__v: com.google.transit.realtime.gtfs_realtime.TranslatedString): Alert = copy(url = Option(__v))
    def getHeaderText: com.google.transit.realtime.gtfs_realtime.TranslatedString = headerText.getOrElse(com.google.transit.realtime.gtfs_realtime.TranslatedString.defaultInstance)
    def clearHeaderText: Alert = copy(headerText = _root_.scala.None)
    def withHeaderText(__v: com.google.transit.realtime.gtfs_realtime.TranslatedString): Alert = copy(headerText = Option(__v))
    def getDescriptionText: com.google.transit.realtime.gtfs_realtime.TranslatedString = descriptionText.getOrElse(com.google.transit.realtime.gtfs_realtime.TranslatedString.defaultInstance)
    def clearDescriptionText: Alert = copy(descriptionText = _root_.scala.None)
    def withDescriptionText(__v: com.google.transit.realtime.gtfs_realtime.TranslatedString): Alert = copy(descriptionText = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => activePeriod
        case 5 => informedEntity
        case 6 => cause.map(_.javaValueDescriptor).orNull
        case 7 => effect.map(_.javaValueDescriptor).orNull
        case 8 => url.orNull
        case 10 => headerText.orNull
        case 11 => descriptionText.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(activePeriod.iterator.map(_.toPMessage).toVector)
        case 5 => _root_.scalapb.descriptors.PRepeated(informedEntity.iterator.map(_.toPMessage).toVector)
        case 6 => cause.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => effect.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => url.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => headerText.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => descriptionText.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.transit.realtime.gtfs_realtime.Alert
}

object Alert extends scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.Alert] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.Alert] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.transit.realtime.gtfs_realtime.Alert = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.transit.realtime.gtfs_realtime.Alert(
      __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.TimeRange]],
      __fieldsMap.getOrElse(__fields.get(1), Nil).asInstanceOf[_root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.EntitySelector]],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[_root_.scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.google.transit.realtime.gtfs_realtime.Alert.Cause.fromValue(__e.getNumber)),
      __fieldsMap.get(__fields.get(3)).asInstanceOf[_root_.scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.google.transit.realtime.gtfs_realtime.Alert.Effect.fromValue(__e.getNumber)),
      __fieldsMap.get(__fields.get(4)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString]],
      __fieldsMap.get(__fields.get(5)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString]],
      __fieldsMap.get(__fields.get(6)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.transit.realtime.gtfs_realtime.Alert] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.transit.realtime.gtfs_realtime.Alert(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.TimeRange]]).getOrElse(_root_.scala.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.EntitySelector]]).getOrElse(_root_.scala.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.google.transit.realtime.gtfs_realtime.Alert.Cause.fromValue(__e.number)),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.google.transit.realtime.gtfs_realtime.Alert.Effect.fromValue(__e.number)),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = GtfsRealtimeProto.javaDescriptor.getMessageTypes.get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = GtfsRealtimeProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.google.transit.realtime.gtfs_realtime.TimeRange
      case 5 => __out = com.google.transit.realtime.gtfs_realtime.EntitySelector
      case 8 => __out = com.google.transit.realtime.gtfs_realtime.TranslatedString
      case 10 => __out = com.google.transit.realtime.gtfs_realtime.TranslatedString
      case 11 => __out = com.google.transit.realtime.gtfs_realtime.TranslatedString
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 6 => com.google.transit.realtime.gtfs_realtime.Alert.Cause
      case 7 => com.google.transit.realtime.gtfs_realtime.Alert.Effect
    }
  }
  lazy val defaultInstance = com.google.transit.realtime.gtfs_realtime.Alert(
  )
  /** Cause of this alert.
    */
  sealed trait Cause extends _root_.scalapb.GeneratedEnum {
    type EnumType = Cause
    def isUnknownCause: _root_.scala.Boolean = false
    def isOtherCause: _root_.scala.Boolean = false
    def isTechnicalProblem: _root_.scala.Boolean = false
    def isStrike: _root_.scala.Boolean = false
    def isDemonstration: _root_.scala.Boolean = false
    def isAccident: _root_.scala.Boolean = false
    def isHoliday: _root_.scala.Boolean = false
    def isWeather: _root_.scala.Boolean = false
    def isMaintenance: _root_.scala.Boolean = false
    def isConstruction: _root_.scala.Boolean = false
    def isPoliceActivity: _root_.scala.Boolean = false
    def isMedicalEmergency: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Cause] = com.google.transit.realtime.gtfs_realtime.Alert.Cause
  }
  
  object Cause extends _root_.scalapb.GeneratedEnumCompanion[Cause] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Cause] = this
    @SerialVersionUID(0L)
    case object UNKNOWN_CAUSE extends Cause {
      val value = 1
      val index = 0
      val name = "UNKNOWN_CAUSE"
      override def isUnknownCause: _root_.scala.Boolean = true
    }
    
    /** Not machine-representable.
      */
    @SerialVersionUID(0L)
    case object OTHER_CAUSE extends Cause {
      val value = 2
      val index = 1
      val name = "OTHER_CAUSE"
      override def isOtherCause: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object TECHNICAL_PROBLEM extends Cause {
      val value = 3
      val index = 2
      val name = "TECHNICAL_PROBLEM"
      override def isTechnicalProblem: _root_.scala.Boolean = true
    }
    
    /** Public transit agency employees stopped working.
      */
    @SerialVersionUID(0L)
    case object STRIKE extends Cause {
      val value = 4
      val index = 3
      val name = "STRIKE"
      override def isStrike: _root_.scala.Boolean = true
    }
    
    /** People are blocking the streets.
      */
    @SerialVersionUID(0L)
    case object DEMONSTRATION extends Cause {
      val value = 5
      val index = 4
      val name = "DEMONSTRATION"
      override def isDemonstration: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object ACCIDENT extends Cause {
      val value = 6
      val index = 5
      val name = "ACCIDENT"
      override def isAccident: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object HOLIDAY extends Cause {
      val value = 7
      val index = 6
      val name = "HOLIDAY"
      override def isHoliday: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object WEATHER extends Cause {
      val value = 8
      val index = 7
      val name = "WEATHER"
      override def isWeather: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object MAINTENANCE extends Cause {
      val value = 9
      val index = 8
      val name = "MAINTENANCE"
      override def isMaintenance: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CONSTRUCTION extends Cause {
      val value = 10
      val index = 9
      val name = "CONSTRUCTION"
      override def isConstruction: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object POLICE_ACTIVITY extends Cause {
      val value = 11
      val index = 10
      val name = "POLICE_ACTIVITY"
      override def isPoliceActivity: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object MEDICAL_EMERGENCY extends Cause {
      val value = 12
      val index = 11
      val name = "MEDICAL_EMERGENCY"
      override def isMedicalEmergency: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends Cause with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(UNKNOWN_CAUSE, OTHER_CAUSE, TECHNICAL_PROBLEM, STRIKE, DEMONSTRATION, ACCIDENT, HOLIDAY, WEATHER, MAINTENANCE, CONSTRUCTION, POLICE_ACTIVITY, MEDICAL_EMERGENCY)
    def fromValue(value: _root_.scala.Int): Cause = value match {
      case 1 => UNKNOWN_CAUSE
      case 2 => OTHER_CAUSE
      case 3 => TECHNICAL_PROBLEM
      case 4 => STRIKE
      case 5 => DEMONSTRATION
      case 6 => ACCIDENT
      case 7 => HOLIDAY
      case 8 => WEATHER
      case 9 => MAINTENANCE
      case 10 => CONSTRUCTION
      case 11 => POLICE_ACTIVITY
      case 12 => MEDICAL_EMERGENCY
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.Alert.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.Alert.scalaDescriptor.enums(0)
  }
  /** What is the effect of this problem on the affected entity.
    */
  sealed trait Effect extends _root_.scalapb.GeneratedEnum {
    type EnumType = Effect
    def isNoService: _root_.scala.Boolean = false
    def isReducedService: _root_.scala.Boolean = false
    def isSignificantDelays: _root_.scala.Boolean = false
    def isDetour: _root_.scala.Boolean = false
    def isAdditionalService: _root_.scala.Boolean = false
    def isModifiedService: _root_.scala.Boolean = false
    def isOtherEffect: _root_.scala.Boolean = false
    def isUnknownEffect: _root_.scala.Boolean = false
    def isStopMoved: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Effect] = com.google.transit.realtime.gtfs_realtime.Alert.Effect
  }
  
  object Effect extends _root_.scalapb.GeneratedEnumCompanion[Effect] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Effect] = this
    @SerialVersionUID(0L)
    case object NO_SERVICE extends Effect {
      val value = 1
      val index = 0
      val name = "NO_SERVICE"
      override def isNoService: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object REDUCED_SERVICE extends Effect {
      val value = 2
      val index = 1
      val name = "REDUCED_SERVICE"
      override def isReducedService: _root_.scala.Boolean = true
    }
    
    /** We don't care about INsignificant delays: they are hard to detect, have
      * little impact on the user, and would clutter the results as they are too
      * frequent.
      */
    @SerialVersionUID(0L)
    case object SIGNIFICANT_DELAYS extends Effect {
      val value = 3
      val index = 2
      val name = "SIGNIFICANT_DELAYS"
      override def isSignificantDelays: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object DETOUR extends Effect {
      val value = 4
      val index = 3
      val name = "DETOUR"
      override def isDetour: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object ADDITIONAL_SERVICE extends Effect {
      val value = 5
      val index = 4
      val name = "ADDITIONAL_SERVICE"
      override def isAdditionalService: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object MODIFIED_SERVICE extends Effect {
      val value = 6
      val index = 5
      val name = "MODIFIED_SERVICE"
      override def isModifiedService: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object OTHER_EFFECT extends Effect {
      val value = 7
      val index = 6
      val name = "OTHER_EFFECT"
      override def isOtherEffect: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object UNKNOWN_EFFECT extends Effect {
      val value = 8
      val index = 7
      val name = "UNKNOWN_EFFECT"
      override def isUnknownEffect: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object STOP_MOVED extends Effect {
      val value = 9
      val index = 8
      val name = "STOP_MOVED"
      override def isStopMoved: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends Effect with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(NO_SERVICE, REDUCED_SERVICE, SIGNIFICANT_DELAYS, DETOUR, ADDITIONAL_SERVICE, MODIFIED_SERVICE, OTHER_EFFECT, UNKNOWN_EFFECT, STOP_MOVED)
    def fromValue(value: _root_.scala.Int): Effect = value match {
      case 1 => NO_SERVICE
      case 2 => REDUCED_SERVICE
      case 3 => SIGNIFICANT_DELAYS
      case 4 => DETOUR
      case 5 => ADDITIONAL_SERVICE
      case 6 => MODIFIED_SERVICE
      case 7 => OTHER_EFFECT
      case 8 => UNKNOWN_EFFECT
      case 9 => STOP_MOVED
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.Alert.javaDescriptor.getEnumTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.Alert.scalaDescriptor.enums(1)
  }
  implicit class AlertLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.Alert]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.transit.realtime.gtfs_realtime.Alert](_l) {
    def activePeriod: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.TimeRange]] = field(_.activePeriod)((c_, f_) => c_.copy(activePeriod = f_))
    def informedEntity: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.EntitySelector]] = field(_.informedEntity)((c_, f_) => c_.copy(informedEntity = f_))
    def cause: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.Alert.Cause] = field(_.getCause)((c_, f_) => c_.copy(cause = Option(f_)))
    def optionalCause: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert.Cause]] = field(_.cause)((c_, f_) => c_.copy(cause = f_))
    def effect: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.Alert.Effect] = field(_.getEffect)((c_, f_) => c_.copy(effect = Option(f_)))
    def optionalEffect: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert.Effect]] = field(_.effect)((c_, f_) => c_.copy(effect = f_))
    def url: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.TranslatedString] = field(_.getUrl)((c_, f_) => c_.copy(url = Option(f_)))
    def optionalUrl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString]] = field(_.url)((c_, f_) => c_.copy(url = f_))
    def headerText: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.TranslatedString] = field(_.getHeaderText)((c_, f_) => c_.copy(headerText = Option(f_)))
    def optionalHeaderText: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString]] = field(_.headerText)((c_, f_) => c_.copy(headerText = f_))
    def descriptionText: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.TranslatedString] = field(_.getDescriptionText)((c_, f_) => c_.copy(descriptionText = Option(f_)))
    def optionalDescriptionText: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString]] = field(_.descriptionText)((c_, f_) => c_.copy(descriptionText = f_))
  }
  final val ACTIVE_PERIOD_FIELD_NUMBER = 1
  final val INFORMED_ENTITY_FIELD_NUMBER = 5
  final val CAUSE_FIELD_NUMBER = 6
  final val EFFECT_FIELD_NUMBER = 7
  final val URL_FIELD_NUMBER = 8
  final val HEADER_TEXT_FIELD_NUMBER = 10
  final val DESCRIPTION_TEXT_FIELD_NUMBER = 11
  def of(
    activePeriod: _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.TimeRange],
    informedEntity: _root_.scala.Seq[com.google.transit.realtime.gtfs_realtime.EntitySelector],
    cause: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert.Cause],
    effect: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert.Effect],
    url: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString],
    headerText: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString],
    descriptionText: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TranslatedString],
    unknownFields: _root_.scalapb.UnknownFieldSet
  ): _root_.com.google.transit.realtime.gtfs_realtime.Alert = _root_.com.google.transit.realtime.gtfs_realtime.Alert(
    activePeriod,
    informedEntity,
    cause,
    effect,
    url,
    headerText,
    descriptionText,
    unknownFields
  )
}
