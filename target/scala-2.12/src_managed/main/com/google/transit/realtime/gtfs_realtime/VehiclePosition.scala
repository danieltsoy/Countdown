// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.google.transit.realtime.gtfs_realtime

/** Realtime positioning information for a given vehicle.
  *
  * @param trip
  *   The Trip that this vehicle is serving.
  *   Can be empty or partial if the vehicle can not be identified with a given
  *   trip instance.
  * @param vehicle
  *   Additional information on the vehicle that is serving this trip.
  * @param position
  *   Current position of this vehicle.
  * @param currentStopSequence
  *   The stop sequence index of the current stop. The meaning of
  *   current_stop_sequence (i.e., the stop that it refers to) is determined by
  *   current_status.
  *   If current_status is missing IN_TRANSIT_TO is assumed.
  * @param stopId
  *   Identifies the current stop. The value must be the same as in stops.txt in
  *   the corresponding GTFS feed.
  * @param currentStatus
  *   The exact status of the vehicle with respect to the current stop.
  *   Ignored if current_stop_sequence is missing.
  * @param timestamp
  *   Moment at which the vehicle's position was measured. In POSIX time
  *   (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
  */
@SerialVersionUID(0L)
final case class VehiclePosition(
    trip: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor] = _root_.scala.None,
    vehicle: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehicleDescriptor] = _root_.scala.None,
    position: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Position] = _root_.scala.None,
    currentStopSequence: _root_.scala.Option[_root_.scala.Int] = _root_.scala.None,
    stopId: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    currentStatus: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus] = _root_.scala.None,
    timestamp: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    congestionLevel: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel] = _root_.scala.None,
    occupancyStatus: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet()
    ) extends scalapb.GeneratedMessage with scalapb.Message[VehiclePosition] with scalapb.lenses.Updatable[VehiclePosition] with _root_.scalapb.ExtendableMessage[VehiclePosition] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (trip.isDefined) {
        val __value = trip.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (vehicle.isDefined) {
        val __value = vehicle.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (position.isDefined) {
        val __value = position.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (currentStopSequence.isDefined) {
        val __value = currentStopSequence.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(3, __value)
      };
      if (stopId.isDefined) {
        val __value = stopId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
      };
      if (currentStatus.isDefined) {
        val __value = currentStatus.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, __value.value)
      };
      if (timestamp.isDefined) {
        val __value = timestamp.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(5, __value)
      };
      if (congestionLevel.isDefined) {
        val __value = congestionLevel.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value.value)
      };
      if (occupancyStatus.isDefined) {
        val __value = occupancyStatus.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(9, __value.value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      trip.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      position.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      currentStopSequence.foreach { __v =>
        val __m = __v
        _output__.writeUInt32(3, __m)
      };
      currentStatus.foreach { __v =>
        val __m = __v
        _output__.writeEnum(4, __m.value)
      };
      timestamp.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(5, __m)
      };
      congestionLevel.foreach { __v =>
        val __m = __v
        _output__.writeEnum(6, __m.value)
      };
      stopId.foreach { __v =>
        val __m = __v
        _output__.writeString(7, __m)
      };
      vehicle.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      occupancyStatus.foreach { __v =>
        val __m = __v
        _output__.writeEnum(9, __m.value)
      };
      unknownFields.writeTo(_output__)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.transit.realtime.gtfs_realtime.VehiclePosition = {
      var __trip = this.trip
      var __vehicle = this.vehicle
      var __position = this.position
      var __currentStopSequence = this.currentStopSequence
      var __stopId = this.stopId
      var __currentStatus = this.currentStatus
      var __timestamp = this.timestamp
      var __congestionLevel = this.congestionLevel
      var __occupancyStatus = this.occupancyStatus
      val _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder(this.unknownFields)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __trip = Option(_root_.scalapb.LiteParser.readMessage(_input__, __trip.getOrElse(com.google.transit.realtime.gtfs_realtime.TripDescriptor.defaultInstance)))
          case 66 =>
            __vehicle = Option(_root_.scalapb.LiteParser.readMessage(_input__, __vehicle.getOrElse(com.google.transit.realtime.gtfs_realtime.VehicleDescriptor.defaultInstance)))
          case 18 =>
            __position = Option(_root_.scalapb.LiteParser.readMessage(_input__, __position.getOrElse(com.google.transit.realtime.gtfs_realtime.Position.defaultInstance)))
          case 24 =>
            __currentStopSequence = Option(_input__.readUInt32())
          case 58 =>
            __stopId = Option(_input__.readString())
          case 32 =>
            __currentStatus = Option(com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus.fromValue(_input__.readEnum()))
          case 40 =>
            __timestamp = Option(_input__.readUInt64())
          case 48 =>
            __congestionLevel = Option(com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel.fromValue(_input__.readEnum()))
          case 72 =>
            __occupancyStatus = Option(com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus.fromValue(_input__.readEnum()))
          case tag => _unknownFields__.parseField(tag, _input__)
        }
      }
      com.google.transit.realtime.gtfs_realtime.VehiclePosition(
          trip = __trip,
          vehicle = __vehicle,
          position = __position,
          currentStopSequence = __currentStopSequence,
          stopId = __stopId,
          currentStatus = __currentStatus,
          timestamp = __timestamp,
          congestionLevel = __congestionLevel,
          occupancyStatus = __occupancyStatus,
          unknownFields = _unknownFields__.result()
      )
    }
    def getTrip: com.google.transit.realtime.gtfs_realtime.TripDescriptor = trip.getOrElse(com.google.transit.realtime.gtfs_realtime.TripDescriptor.defaultInstance)
    def clearTrip: VehiclePosition = copy(trip = _root_.scala.None)
    def withTrip(__v: com.google.transit.realtime.gtfs_realtime.TripDescriptor): VehiclePosition = copy(trip = Option(__v))
    def getVehicle: com.google.transit.realtime.gtfs_realtime.VehicleDescriptor = vehicle.getOrElse(com.google.transit.realtime.gtfs_realtime.VehicleDescriptor.defaultInstance)
    def clearVehicle: VehiclePosition = copy(vehicle = _root_.scala.None)
    def withVehicle(__v: com.google.transit.realtime.gtfs_realtime.VehicleDescriptor): VehiclePosition = copy(vehicle = Option(__v))
    def getPosition: com.google.transit.realtime.gtfs_realtime.Position = position.getOrElse(com.google.transit.realtime.gtfs_realtime.Position.defaultInstance)
    def clearPosition: VehiclePosition = copy(position = _root_.scala.None)
    def withPosition(__v: com.google.transit.realtime.gtfs_realtime.Position): VehiclePosition = copy(position = Option(__v))
    def getCurrentStopSequence: _root_.scala.Int = currentStopSequence.getOrElse(0)
    def clearCurrentStopSequence: VehiclePosition = copy(currentStopSequence = _root_.scala.None)
    def withCurrentStopSequence(__v: _root_.scala.Int): VehiclePosition = copy(currentStopSequence = Option(__v))
    def getStopId: _root_.scala.Predef.String = stopId.getOrElse("")
    def clearStopId: VehiclePosition = copy(stopId = _root_.scala.None)
    def withStopId(__v: _root_.scala.Predef.String): VehiclePosition = copy(stopId = Option(__v))
    def getCurrentStatus: com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus = currentStatus.getOrElse(com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus.IN_TRANSIT_TO)
    def clearCurrentStatus: VehiclePosition = copy(currentStatus = _root_.scala.None)
    def withCurrentStatus(__v: com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus): VehiclePosition = copy(currentStatus = Option(__v))
    def getTimestamp: _root_.scala.Long = timestamp.getOrElse(0L)
    def clearTimestamp: VehiclePosition = copy(timestamp = _root_.scala.None)
    def withTimestamp(__v: _root_.scala.Long): VehiclePosition = copy(timestamp = Option(__v))
    def getCongestionLevel: com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel = congestionLevel.getOrElse(com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel.UNKNOWN_CONGESTION_LEVEL)
    def clearCongestionLevel: VehiclePosition = copy(congestionLevel = _root_.scala.None)
    def withCongestionLevel(__v: com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel): VehiclePosition = copy(congestionLevel = Option(__v))
    def getOccupancyStatus: com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus = occupancyStatus.getOrElse(com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus.EMPTY)
    def clearOccupancyStatus: VehiclePosition = copy(occupancyStatus = _root_.scala.None)
    def withOccupancyStatus(__v: com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus): VehiclePosition = copy(occupancyStatus = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => trip.orNull
        case 8 => vehicle.orNull
        case 2 => position.orNull
        case 3 => currentStopSequence.orNull
        case 7 => stopId.orNull
        case 4 => currentStatus.map(_.javaValueDescriptor).orNull
        case 5 => timestamp.orNull
        case 6 => congestionLevel.map(_.javaValueDescriptor).orNull
        case 9 => occupancyStatus.map(_.javaValueDescriptor).orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => trip.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => vehicle.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => position.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => currentStopSequence.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => stopId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => currentStatus.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => timestamp.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => congestionLevel.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => occupancyStatus.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.transit.realtime.gtfs_realtime.VehiclePosition
}

object VehiclePosition extends scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.VehiclePosition] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.VehiclePosition] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.transit.realtime.gtfs_realtime.VehiclePosition = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.transit.realtime.gtfs_realtime.VehiclePosition(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor]],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehicleDescriptor]],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Position]],
      __fieldsMap.get(__fields.get(3)).asInstanceOf[_root_.scala.Option[_root_.scala.Int]],
      __fieldsMap.get(__fields.get(4)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]],
      __fieldsMap.get(__fields.get(5)).asInstanceOf[_root_.scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus.fromValue(__e.getNumber)),
      __fieldsMap.get(__fields.get(6)).asInstanceOf[_root_.scala.Option[_root_.scala.Long]],
      __fieldsMap.get(__fields.get(7)).asInstanceOf[_root_.scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel.fromValue(__e.getNumber)),
      __fieldsMap.get(__fields.get(8)).asInstanceOf[_root_.scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus.fromValue(__e.getNumber))
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.transit.realtime.gtfs_realtime.VehiclePosition] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.transit.realtime.gtfs_realtime.VehiclePosition(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehicleDescriptor]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Position]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Int]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus.fromValue(__e.number)),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel.fromValue(__e.number)),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus.fromValue(__e.number))
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = GtfsRealtimeProto.javaDescriptor.getMessageTypes.get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = GtfsRealtimeProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.google.transit.realtime.gtfs_realtime.TripDescriptor
      case 8 => __out = com.google.transit.realtime.gtfs_realtime.VehicleDescriptor
      case 2 => __out = com.google.transit.realtime.gtfs_realtime.Position
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus
      case 6 => com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel
      case 9 => com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus
    }
  }
  lazy val defaultInstance = com.google.transit.realtime.gtfs_realtime.VehiclePosition(
  )
  sealed trait VehicleStopStatus extends _root_.scalapb.GeneratedEnum {
    type EnumType = VehicleStopStatus
    def isIncomingAt: _root_.scala.Boolean = false
    def isStoppedAt: _root_.scala.Boolean = false
    def isInTransitTo: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[VehicleStopStatus] = com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus
  }
  
  object VehicleStopStatus extends _root_.scalapb.GeneratedEnumCompanion[VehicleStopStatus] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[VehicleStopStatus] = this
    /** The vehicle is just about to arrive at the stop (on a stop
      * display, the vehicle symbol typically flashes).
      */
    @SerialVersionUID(0L)
    case object INCOMING_AT extends VehicleStopStatus {
      val value = 0
      val index = 0
      val name = "INCOMING_AT"
      override def isIncomingAt: _root_.scala.Boolean = true
    }
    
    /** The vehicle is standing at the stop.
      */
    @SerialVersionUID(0L)
    case object STOPPED_AT extends VehicleStopStatus {
      val value = 1
      val index = 1
      val name = "STOPPED_AT"
      override def isStoppedAt: _root_.scala.Boolean = true
    }
    
    /** The vehicle has departed and is in transit to the next stop.
      */
    @SerialVersionUID(0L)
    case object IN_TRANSIT_TO extends VehicleStopStatus {
      val value = 2
      val index = 2
      val name = "IN_TRANSIT_TO"
      override def isInTransitTo: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends VehicleStopStatus with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(INCOMING_AT, STOPPED_AT, IN_TRANSIT_TO)
    def fromValue(value: _root_.scala.Int): VehicleStopStatus = value match {
      case 0 => INCOMING_AT
      case 1 => STOPPED_AT
      case 2 => IN_TRANSIT_TO
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.VehiclePosition.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.VehiclePosition.scalaDescriptor.enums(0)
  }
  /** Congestion level that is affecting this vehicle.
    */
  sealed trait CongestionLevel extends _root_.scalapb.GeneratedEnum {
    type EnumType = CongestionLevel
    def isUnknownCongestionLevel: _root_.scala.Boolean = false
    def isRunningSmoothly: _root_.scala.Boolean = false
    def isStopAndGo: _root_.scala.Boolean = false
    def isCongestion: _root_.scala.Boolean = false
    def isSevereCongestion: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[CongestionLevel] = com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel
  }
  
  object CongestionLevel extends _root_.scalapb.GeneratedEnumCompanion[CongestionLevel] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[CongestionLevel] = this
    @SerialVersionUID(0L)
    case object UNKNOWN_CONGESTION_LEVEL extends CongestionLevel {
      val value = 0
      val index = 0
      val name = "UNKNOWN_CONGESTION_LEVEL"
      override def isUnknownCongestionLevel: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object RUNNING_SMOOTHLY extends CongestionLevel {
      val value = 1
      val index = 1
      val name = "RUNNING_SMOOTHLY"
      override def isRunningSmoothly: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object STOP_AND_GO extends CongestionLevel {
      val value = 2
      val index = 2
      val name = "STOP_AND_GO"
      override def isStopAndGo: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CONGESTION extends CongestionLevel {
      val value = 3
      val index = 3
      val name = "CONGESTION"
      override def isCongestion: _root_.scala.Boolean = true
    }
    
    /** People leaving their cars.
      */
    @SerialVersionUID(0L)
    case object SEVERE_CONGESTION extends CongestionLevel {
      val value = 4
      val index = 4
      val name = "SEVERE_CONGESTION"
      override def isSevereCongestion: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends CongestionLevel with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(UNKNOWN_CONGESTION_LEVEL, RUNNING_SMOOTHLY, STOP_AND_GO, CONGESTION, SEVERE_CONGESTION)
    def fromValue(value: _root_.scala.Int): CongestionLevel = value match {
      case 0 => UNKNOWN_CONGESTION_LEVEL
      case 1 => RUNNING_SMOOTHLY
      case 2 => STOP_AND_GO
      case 3 => CONGESTION
      case 4 => SEVERE_CONGESTION
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.VehiclePosition.javaDescriptor.getEnumTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.VehiclePosition.scalaDescriptor.enums(1)
  }
  /** The degree of passenger occupancy of the vehicle. This field is still
    * experimental, and subject to change. It may be formally adopted in the
    * future.
    */
  sealed trait OccupancyStatus extends _root_.scalapb.GeneratedEnum {
    type EnumType = OccupancyStatus
    def isEmpty: _root_.scala.Boolean = false
    def isManySeatsAvailable: _root_.scala.Boolean = false
    def isFewSeatsAvailable: _root_.scala.Boolean = false
    def isStandingRoomOnly: _root_.scala.Boolean = false
    def isCrushedStandingRoomOnly: _root_.scala.Boolean = false
    def isFull: _root_.scala.Boolean = false
    def isNotAcceptingPassengers: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[OccupancyStatus] = com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus
  }
  
  object OccupancyStatus extends _root_.scalapb.GeneratedEnumCompanion[OccupancyStatus] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[OccupancyStatus] = this
    /** The vehicle is considered empty by most measures, and has few or no
      * passengers onboard, but is still accepting passengers.
      */
    @SerialVersionUID(0L)
    case object EMPTY extends OccupancyStatus {
      val value = 0
      val index = 0
      val name = "EMPTY"
      override def isEmpty: _root_.scala.Boolean = true
    }
    
    /** The vehicle has a relatively large percentage of seats available.
      * What percentage of free seats out of the total seats available is to be
      * considered large enough to fall into this category is determined at the
      * discretion of the producer.
      */
    @SerialVersionUID(0L)
    case object MANY_SEATS_AVAILABLE extends OccupancyStatus {
      val value = 1
      val index = 1
      val name = "MANY_SEATS_AVAILABLE"
      override def isManySeatsAvailable: _root_.scala.Boolean = true
    }
    
    /** The vehicle has a relatively small percentage of seats available.
      * What percentage of free seats out of the total seats available is to be
      * considered small enough to fall into this category is determined at the
      * discretion of the feed producer.
      */
    @SerialVersionUID(0L)
    case object FEW_SEATS_AVAILABLE extends OccupancyStatus {
      val value = 2
      val index = 2
      val name = "FEW_SEATS_AVAILABLE"
      override def isFewSeatsAvailable: _root_.scala.Boolean = true
    }
    
    /** The vehicle can currently accommodate only standing passengers.
      */
    @SerialVersionUID(0L)
    case object STANDING_ROOM_ONLY extends OccupancyStatus {
      val value = 3
      val index = 3
      val name = "STANDING_ROOM_ONLY"
      override def isStandingRoomOnly: _root_.scala.Boolean = true
    }
    
    /** The vehicle can currently accommodate only standing passengers
      * and has limited space for them.
      */
    @SerialVersionUID(0L)
    case object CRUSHED_STANDING_ROOM_ONLY extends OccupancyStatus {
      val value = 4
      val index = 4
      val name = "CRUSHED_STANDING_ROOM_ONLY"
      override def isCrushedStandingRoomOnly: _root_.scala.Boolean = true
    }
    
    /** The vehicle is considered full by most measures, but may still be
      * allowing passengers to board.
      */
    @SerialVersionUID(0L)
    case object FULL extends OccupancyStatus {
      val value = 5
      val index = 5
      val name = "FULL"
      override def isFull: _root_.scala.Boolean = true
    }
    
    /** The vehicle is not accepting additional passengers.
      */
    @SerialVersionUID(0L)
    case object NOT_ACCEPTING_PASSENGERS extends OccupancyStatus {
      val value = 6
      val index = 6
      val name = "NOT_ACCEPTING_PASSENGERS"
      override def isNotAcceptingPassengers: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends OccupancyStatus with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(EMPTY, MANY_SEATS_AVAILABLE, FEW_SEATS_AVAILABLE, STANDING_ROOM_ONLY, CRUSHED_STANDING_ROOM_ONLY, FULL, NOT_ACCEPTING_PASSENGERS)
    def fromValue(value: _root_.scala.Int): OccupancyStatus = value match {
      case 0 => EMPTY
      case 1 => MANY_SEATS_AVAILABLE
      case 2 => FEW_SEATS_AVAILABLE
      case 3 => STANDING_ROOM_ONLY
      case 4 => CRUSHED_STANDING_ROOM_ONLY
      case 5 => FULL
      case 6 => NOT_ACCEPTING_PASSENGERS
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.VehiclePosition.javaDescriptor.getEnumTypes.get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.google.transit.realtime.gtfs_realtime.VehiclePosition.scalaDescriptor.enums(2)
  }
  implicit class VehiclePositionLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.VehiclePosition]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.transit.realtime.gtfs_realtime.VehiclePosition](_l) {
    def trip: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.TripDescriptor] = field(_.getTrip)((c_, f_) => c_.copy(trip = Option(f_)))
    def optionalTrip: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor]] = field(_.trip)((c_, f_) => c_.copy(trip = f_))
    def vehicle: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.VehicleDescriptor] = field(_.getVehicle)((c_, f_) => c_.copy(vehicle = Option(f_)))
    def optionalVehicle: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehicleDescriptor]] = field(_.vehicle)((c_, f_) => c_.copy(vehicle = f_))
    def position: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.Position] = field(_.getPosition)((c_, f_) => c_.copy(position = Option(f_)))
    def optionalPosition: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Position]] = field(_.position)((c_, f_) => c_.copy(position = f_))
    def currentStopSequence: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.getCurrentStopSequence)((c_, f_) => c_.copy(currentStopSequence = Option(f_)))
    def optionalCurrentStopSequence: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Int]] = field(_.currentStopSequence)((c_, f_) => c_.copy(currentStopSequence = f_))
    def stopId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getStopId)((c_, f_) => c_.copy(stopId = Option(f_)))
    def optionalStopId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.stopId)((c_, f_) => c_.copy(stopId = f_))
    def currentStatus: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus] = field(_.getCurrentStatus)((c_, f_) => c_.copy(currentStatus = Option(f_)))
    def optionalCurrentStatus: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus]] = field(_.currentStatus)((c_, f_) => c_.copy(currentStatus = f_))
    def timestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getTimestamp)((c_, f_) => c_.copy(timestamp = Option(f_)))
    def optionalTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def congestionLevel: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel] = field(_.getCongestionLevel)((c_, f_) => c_.copy(congestionLevel = Option(f_)))
    def optionalCongestionLevel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel]] = field(_.congestionLevel)((c_, f_) => c_.copy(congestionLevel = f_))
    def occupancyStatus: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus] = field(_.getOccupancyStatus)((c_, f_) => c_.copy(occupancyStatus = Option(f_)))
    def optionalOccupancyStatus: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus]] = field(_.occupancyStatus)((c_, f_) => c_.copy(occupancyStatus = f_))
  }
  final val TRIP_FIELD_NUMBER = 1
  final val VEHICLE_FIELD_NUMBER = 8
  final val POSITION_FIELD_NUMBER = 2
  final val CURRENT_STOP_SEQUENCE_FIELD_NUMBER = 3
  final val STOP_ID_FIELD_NUMBER = 7
  final val CURRENT_STATUS_FIELD_NUMBER = 4
  final val TIMESTAMP_FIELD_NUMBER = 5
  final val CONGESTION_LEVEL_FIELD_NUMBER = 6
  final val OCCUPANCY_STATUS_FIELD_NUMBER = 9
  def of(
    trip: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor],
    vehicle: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehicleDescriptor],
    position: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Position],
    currentStopSequence: _root_.scala.Option[_root_.scala.Int],
    stopId: _root_.scala.Option[_root_.scala.Predef.String],
    currentStatus: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition.VehicleStopStatus],
    timestamp: _root_.scala.Option[_root_.scala.Long],
    congestionLevel: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition.CongestionLevel],
    occupancyStatus: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition.OccupancyStatus],
    unknownFields: _root_.scalapb.UnknownFieldSet
  ): _root_.com.google.transit.realtime.gtfs_realtime.VehiclePosition = _root_.com.google.transit.realtime.gtfs_realtime.VehiclePosition(
    trip,
    vehicle,
    position,
    currentStopSequence,
    stopId,
    currentStatus,
    timestamp,
    congestionLevel,
    occupancyStatus,
    unknownFields
  )
}
