// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.google.transit.realtime.gtfs_realtime

/** A selector for an entity in a GTFS feed.
  *
  * @param agencyId
  *   The values of the fields should correspond to the appropriate fields in the
  *   GTFS feed.
  *   At least one specifier must be given. If several are given, then the
  *   matching has to apply to all the given specifiers.
  * @param routeType
  *   corresponds to route_type in GTFS.
  */
@SerialVersionUID(0L)
final case class EntitySelector(
    agencyId: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    routeId: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    routeType: _root_.scala.Option[_root_.scala.Int] = _root_.scala.None,
    trip: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor] = _root_.scala.None,
    stopId: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet()
    ) extends scalapb.GeneratedMessage with scalapb.Message[EntitySelector] with scalapb.lenses.Updatable[EntitySelector] with _root_.scalapb.ExtendableMessage[EntitySelector] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (agencyId.isDefined) {
        val __value = agencyId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      };
      if (routeId.isDefined) {
        val __value = routeId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      };
      if (routeType.isDefined) {
        val __value = routeType.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, __value)
      };
      if (trip.isDefined) {
        val __value = trip.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (stopId.isDefined) {
        val __value = stopId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      agencyId.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      routeId.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      routeType.foreach { __v =>
        val __m = __v
        _output__.writeInt32(3, __m)
      };
      trip.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      stopId.foreach { __v =>
        val __m = __v
        _output__.writeString(5, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.transit.realtime.gtfs_realtime.EntitySelector = {
      var __agencyId = this.agencyId
      var __routeId = this.routeId
      var __routeType = this.routeType
      var __trip = this.trip
      var __stopId = this.stopId
      val _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder(this.unknownFields)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __agencyId = Option(_input__.readString())
          case 18 =>
            __routeId = Option(_input__.readString())
          case 24 =>
            __routeType = Option(_input__.readInt32())
          case 34 =>
            __trip = Option(_root_.scalapb.LiteParser.readMessage(_input__, __trip.getOrElse(com.google.transit.realtime.gtfs_realtime.TripDescriptor.defaultInstance)))
          case 42 =>
            __stopId = Option(_input__.readString())
          case tag => _unknownFields__.parseField(tag, _input__)
        }
      }
      com.google.transit.realtime.gtfs_realtime.EntitySelector(
          agencyId = __agencyId,
          routeId = __routeId,
          routeType = __routeType,
          trip = __trip,
          stopId = __stopId,
          unknownFields = _unknownFields__.result()
      )
    }
    def getAgencyId: _root_.scala.Predef.String = agencyId.getOrElse("")
    def clearAgencyId: EntitySelector = copy(agencyId = _root_.scala.None)
    def withAgencyId(__v: _root_.scala.Predef.String): EntitySelector = copy(agencyId = Option(__v))
    def getRouteId: _root_.scala.Predef.String = routeId.getOrElse("")
    def clearRouteId: EntitySelector = copy(routeId = _root_.scala.None)
    def withRouteId(__v: _root_.scala.Predef.String): EntitySelector = copy(routeId = Option(__v))
    def getRouteType: _root_.scala.Int = routeType.getOrElse(0)
    def clearRouteType: EntitySelector = copy(routeType = _root_.scala.None)
    def withRouteType(__v: _root_.scala.Int): EntitySelector = copy(routeType = Option(__v))
    def getTrip: com.google.transit.realtime.gtfs_realtime.TripDescriptor = trip.getOrElse(com.google.transit.realtime.gtfs_realtime.TripDescriptor.defaultInstance)
    def clearTrip: EntitySelector = copy(trip = _root_.scala.None)
    def withTrip(__v: com.google.transit.realtime.gtfs_realtime.TripDescriptor): EntitySelector = copy(trip = Option(__v))
    def getStopId: _root_.scala.Predef.String = stopId.getOrElse("")
    def clearStopId: EntitySelector = copy(stopId = _root_.scala.None)
    def withStopId(__v: _root_.scala.Predef.String): EntitySelector = copy(stopId = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => agencyId.orNull
        case 2 => routeId.orNull
        case 3 => routeType.orNull
        case 4 => trip.orNull
        case 5 => stopId.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => agencyId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => routeId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => routeType.map(_root_.scalapb.descriptors.PInt).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => trip.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => stopId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.transit.realtime.gtfs_realtime.EntitySelector
}

object EntitySelector extends scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.EntitySelector] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.EntitySelector] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.transit.realtime.gtfs_realtime.EntitySelector = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.transit.realtime.gtfs_realtime.EntitySelector(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[_root_.scala.Option[_root_.scala.Int]],
      __fieldsMap.get(__fields.get(3)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor]],
      __fieldsMap.get(__fields.get(4)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.transit.realtime.gtfs_realtime.EntitySelector] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.transit.realtime.gtfs_realtime.EntitySelector(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Int]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = GtfsRealtimeProto.javaDescriptor.getMessageTypes.get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = GtfsRealtimeProto.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = com.google.transit.realtime.gtfs_realtime.TripDescriptor
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.transit.realtime.gtfs_realtime.EntitySelector(
  )
  implicit class EntitySelectorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.EntitySelector]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.transit.realtime.gtfs_realtime.EntitySelector](_l) {
    def agencyId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getAgencyId)((c_, f_) => c_.copy(agencyId = Option(f_)))
    def optionalAgencyId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.agencyId)((c_, f_) => c_.copy(agencyId = f_))
    def routeId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getRouteId)((c_, f_) => c_.copy(routeId = Option(f_)))
    def optionalRouteId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.routeId)((c_, f_) => c_.copy(routeId = f_))
    def routeType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.getRouteType)((c_, f_) => c_.copy(routeType = Option(f_)))
    def optionalRouteType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Int]] = field(_.routeType)((c_, f_) => c_.copy(routeType = f_))
    def trip: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.TripDescriptor] = field(_.getTrip)((c_, f_) => c_.copy(trip = Option(f_)))
    def optionalTrip: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor]] = field(_.trip)((c_, f_) => c_.copy(trip = f_))
    def stopId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getStopId)((c_, f_) => c_.copy(stopId = Option(f_)))
    def optionalStopId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.stopId)((c_, f_) => c_.copy(stopId = f_))
  }
  final val AGENCY_ID_FIELD_NUMBER = 1
  final val ROUTE_ID_FIELD_NUMBER = 2
  final val ROUTE_TYPE_FIELD_NUMBER = 3
  final val TRIP_FIELD_NUMBER = 4
  final val STOP_ID_FIELD_NUMBER = 5
  def of(
    agencyId: _root_.scala.Option[_root_.scala.Predef.String],
    routeId: _root_.scala.Option[_root_.scala.Predef.String],
    routeType: _root_.scala.Option[_root_.scala.Int],
    trip: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripDescriptor],
    stopId: _root_.scala.Option[_root_.scala.Predef.String],
    unknownFields: _root_.scalapb.UnknownFieldSet
  ): _root_.com.google.transit.realtime.gtfs_realtime.EntitySelector = _root_.com.google.transit.realtime.gtfs_realtime.EntitySelector(
    agencyId,
    routeId,
    routeType,
    trip,
    stopId,
    unknownFields
  )
}
