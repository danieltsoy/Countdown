// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.google.transit.realtime.gtfs_realtime

/** A definition (or update) of an entity in the transit feed.
  *
  * @param id
  *   The ids are used only to provide incrementality support. The id should be
  *   unique within a FeedMessage. Consequent FeedMessages may contain
  *   FeedEntities with the same id. In case of a DIFFERENTIAL update the new
  *   FeedEntity with some id will replace the old FeedEntity with the same id
  *   (or delete it - see is_deleted below).
  *   The actual GTFS entities (e.g. stations, routes, trips) referenced by the
  *   feed must be specified by explicit selectors (see EntitySelector below for
  *   more info).
  * @param isDeleted
  *   Whether this entity is to be deleted. Relevant only for incremental
  *   fetches.
  * @param tripUpdate
  *   Data about the entity itself. Exactly one of the following fields must be
  *   present (unless the entity is being deleted).
  */
@SerialVersionUID(0L)
final case class FeedEntity(
    id: _root_.scala.Predef.String,
    isDeleted: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    tripUpdate: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripUpdate] = _root_.scala.None,
    vehicle: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition] = _root_.scala.None,
    alert: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet()
    ) extends scalapb.GeneratedMessage with scalapb.Message[FeedEntity] with scalapb.lenses.Updatable[FeedEntity] with _root_.scalapb.ExtendableMessage[FeedEntity] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      };
      if (isDeleted.isDefined) {
        val __value = isDeleted.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
      };
      if (tripUpdate.isDefined) {
        val __value = tripUpdate.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (vehicle.isDefined) {
        val __value = vehicle.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (alert.isDefined) {
        val __value = alert.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      
      {
        val __v = id
        _output__.writeString(1, __v)
      };
      isDeleted.foreach { __v =>
        val __m = __v
        _output__.writeBool(2, __m)
      };
      tripUpdate.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      vehicle.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      alert.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.transit.realtime.gtfs_realtime.FeedEntity = {
      var __id = this.id
      var __isDeleted = this.isDeleted
      var __tripUpdate = this.tripUpdate
      var __vehicle = this.vehicle
      var __alert = this.alert
      val _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder(this.unknownFields)
      var __requiredFields0: _root_.scala.Long = 0x1L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __id = _input__.readString()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 16 =>
            __isDeleted = Option(_input__.readBool())
          case 26 =>
            __tripUpdate = Option(_root_.scalapb.LiteParser.readMessage(_input__, __tripUpdate.getOrElse(com.google.transit.realtime.gtfs_realtime.TripUpdate.defaultInstance)))
          case 34 =>
            __vehicle = Option(_root_.scalapb.LiteParser.readMessage(_input__, __vehicle.getOrElse(com.google.transit.realtime.gtfs_realtime.VehiclePosition.defaultInstance)))
          case 42 =>
            __alert = Option(_root_.scalapb.LiteParser.readMessage(_input__, __alert.getOrElse(com.google.transit.realtime.gtfs_realtime.Alert.defaultInstance)))
          case tag => _unknownFields__.parseField(tag, _input__)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      com.google.transit.realtime.gtfs_realtime.FeedEntity(
          id = __id,
          isDeleted = __isDeleted,
          tripUpdate = __tripUpdate,
          vehicle = __vehicle,
          alert = __alert,
          unknownFields = _unknownFields__.result()
      )
    }
    def withId(__v: _root_.scala.Predef.String): FeedEntity = copy(id = __v)
    def getIsDeleted: _root_.scala.Boolean = isDeleted.getOrElse(false)
    def clearIsDeleted: FeedEntity = copy(isDeleted = _root_.scala.None)
    def withIsDeleted(__v: _root_.scala.Boolean): FeedEntity = copy(isDeleted = Option(__v))
    def getTripUpdate: com.google.transit.realtime.gtfs_realtime.TripUpdate = tripUpdate.getOrElse(com.google.transit.realtime.gtfs_realtime.TripUpdate.defaultInstance)
    def clearTripUpdate: FeedEntity = copy(tripUpdate = _root_.scala.None)
    def withTripUpdate(__v: com.google.transit.realtime.gtfs_realtime.TripUpdate): FeedEntity = copy(tripUpdate = Option(__v))
    def getVehicle: com.google.transit.realtime.gtfs_realtime.VehiclePosition = vehicle.getOrElse(com.google.transit.realtime.gtfs_realtime.VehiclePosition.defaultInstance)
    def clearVehicle: FeedEntity = copy(vehicle = _root_.scala.None)
    def withVehicle(__v: com.google.transit.realtime.gtfs_realtime.VehiclePosition): FeedEntity = copy(vehicle = Option(__v))
    def getAlert: com.google.transit.realtime.gtfs_realtime.Alert = alert.getOrElse(com.google.transit.realtime.gtfs_realtime.Alert.defaultInstance)
    def clearAlert: FeedEntity = copy(alert = _root_.scala.None)
    def withAlert(__v: com.google.transit.realtime.gtfs_realtime.Alert): FeedEntity = copy(alert = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => id
        case 2 => isDeleted.orNull
        case 3 => tripUpdate.orNull
        case 4 => vehicle.orNull
        case 5 => alert.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(id)
        case 2 => isDeleted.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => tripUpdate.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => vehicle.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => alert.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.transit.realtime.gtfs_realtime.FeedEntity
}

object FeedEntity extends scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.FeedEntity] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.FeedEntity] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.transit.realtime.gtfs_realtime.FeedEntity = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.transit.realtime.gtfs_realtime.FeedEntity(
      __fieldsMap(__fields.get(0)).asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[_root_.scala.Boolean]],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripUpdate]],
      __fieldsMap.get(__fields.get(3)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition]],
      __fieldsMap.get(__fields.get(4)).asInstanceOf[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.transit.realtime.gtfs_realtime.FeedEntity] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.transit.realtime.gtfs_realtime.FeedEntity(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scala.Predef.String],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripUpdate]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = GtfsRealtimeProto.javaDescriptor.getMessageTypes.get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = GtfsRealtimeProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = com.google.transit.realtime.gtfs_realtime.TripUpdate
      case 4 => __out = com.google.transit.realtime.gtfs_realtime.VehiclePosition
      case 5 => __out = com.google.transit.realtime.gtfs_realtime.Alert
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.transit.realtime.gtfs_realtime.FeedEntity(
    id = ""
  )
  implicit class FeedEntityLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.FeedEntity]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.transit.realtime.gtfs_realtime.FeedEntity](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def isDeleted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIsDeleted)((c_, f_) => c_.copy(isDeleted = Option(f_)))
    def optionalIsDeleted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.isDeleted)((c_, f_) => c_.copy(isDeleted = f_))
    def tripUpdate: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.TripUpdate] = field(_.getTripUpdate)((c_, f_) => c_.copy(tripUpdate = Option(f_)))
    def optionalTripUpdate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripUpdate]] = field(_.tripUpdate)((c_, f_) => c_.copy(tripUpdate = f_))
    def vehicle: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.VehiclePosition] = field(_.getVehicle)((c_, f_) => c_.copy(vehicle = Option(f_)))
    def optionalVehicle: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition]] = field(_.vehicle)((c_, f_) => c_.copy(vehicle = f_))
    def alert: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.Alert] = field(_.getAlert)((c_, f_) => c_.copy(alert = Option(f_)))
    def optionalAlert: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert]] = field(_.alert)((c_, f_) => c_.copy(alert = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val IS_DELETED_FIELD_NUMBER = 2
  final val TRIP_UPDATE_FIELD_NUMBER = 3
  final val VEHICLE_FIELD_NUMBER = 4
  final val ALERT_FIELD_NUMBER = 5
  def of(
    id: _root_.scala.Predef.String,
    isDeleted: _root_.scala.Option[_root_.scala.Boolean],
    tripUpdate: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.TripUpdate],
    vehicle: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.VehiclePosition],
    alert: _root_.scala.Option[com.google.transit.realtime.gtfs_realtime.Alert],
    unknownFields: _root_.scalapb.UnknownFieldSet
  ): _root_.com.google.transit.realtime.gtfs_realtime.FeedEntity = _root_.com.google.transit.realtime.gtfs_realtime.FeedEntity(
    id,
    isDeleted,
    tripUpdate,
    vehicle,
    alert,
    unknownFields
  )
}
