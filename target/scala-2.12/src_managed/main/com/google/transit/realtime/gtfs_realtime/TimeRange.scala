// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.google.transit.realtime.gtfs_realtime

/** A time interval. The interval is considered active at time 't' if 't' is
  * greater than or equal to the start time and less than the end time.
  *
  * @param start
  *   Start time, in POSIX time (i.e., number of seconds since January 1st 1970
  *   00:00:00 UTC).
  *   If missing, the interval starts at minus infinity.
  * @param end
  *   End time, in POSIX time (i.e., number of seconds since January 1st 1970
  *   00:00:00 UTC).
  *   If missing, the interval ends at plus infinity.
  */
@SerialVersionUID(0L)
final case class TimeRange(
    start: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    end: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet()
    ) extends scalapb.GeneratedMessage with scalapb.Message[TimeRange] with scalapb.lenses.Updatable[TimeRange] with _root_.scalapb.ExtendableMessage[TimeRange] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (start.isDefined) {
        val __value = start.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
      };
      if (end.isDefined) {
        val __value = end.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      start.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(1, __m)
      };
      end.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(2, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.transit.realtime.gtfs_realtime.TimeRange = {
      var __start = this.start
      var __end = this.end
      val _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder(this.unknownFields)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __start = Option(_input__.readUInt64())
          case 16 =>
            __end = Option(_input__.readUInt64())
          case tag => _unknownFields__.parseField(tag, _input__)
        }
      }
      com.google.transit.realtime.gtfs_realtime.TimeRange(
          start = __start,
          end = __end,
          unknownFields = _unknownFields__.result()
      )
    }
    def getStart: _root_.scala.Long = start.getOrElse(0L)
    def clearStart: TimeRange = copy(start = _root_.scala.None)
    def withStart(__v: _root_.scala.Long): TimeRange = copy(start = Option(__v))
    def getEnd: _root_.scala.Long = end.getOrElse(0L)
    def clearEnd: TimeRange = copy(end = _root_.scala.None)
    def withEnd(__v: _root_.scala.Long): TimeRange = copy(end = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => start.orNull
        case 2 => end.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => start.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => end.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.transit.realtime.gtfs_realtime.TimeRange
}

object TimeRange extends scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.TimeRange] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.transit.realtime.gtfs_realtime.TimeRange] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.google.transit.realtime.gtfs_realtime.TimeRange = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.google.transit.realtime.gtfs_realtime.TimeRange(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[_root_.scala.Long]],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[_root_.scala.Long]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.transit.realtime.gtfs_realtime.TimeRange] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.transit.realtime.gtfs_realtime.TimeRange(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = GtfsRealtimeProto.javaDescriptor.getMessageTypes.get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = GtfsRealtimeProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.google.transit.realtime.gtfs_realtime.TimeRange(
  )
  implicit class TimeRangeLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.transit.realtime.gtfs_realtime.TimeRange]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.transit.realtime.gtfs_realtime.TimeRange](_l) {
    def start: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getStart)((c_, f_) => c_.copy(start = Option(f_)))
    def optionalStart: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.start)((c_, f_) => c_.copy(start = f_))
    def end: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getEnd)((c_, f_) => c_.copy(end = Option(f_)))
    def optionalEnd: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.end)((c_, f_) => c_.copy(end = f_))
  }
  final val START_FIELD_NUMBER = 1
  final val END_FIELD_NUMBER = 2
  def of(
    start: _root_.scala.Option[_root_.scala.Long],
    end: _root_.scala.Option[_root_.scala.Long],
    unknownFields: _root_.scalapb.UnknownFieldSet
  ): _root_.com.google.transit.realtime.gtfs_realtime.TimeRange = _root_.com.google.transit.realtime.gtfs_realtime.TimeRange(
    start,
    end,
    unknownFields
  )
}
